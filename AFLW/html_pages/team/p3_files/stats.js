(function(){var STATS,AFL=this;void 0===AFL.STATS&&(STATS=AFL.STATS={}),STATS.Cache=new AFL.Cache,STATS.Rounds=Backbone.Collection.extend({mixin:[Backbone.URLRoutesMixin,Backbone.CachedCollectionMixin],urlRoutes:["afl/season","afl/season?seasonId=:season_id"],urlParams:{season_id:null},initialize:function(models,options){options.service&&(this.service=options.service),options.season_id&&this.setParam("season_id",options.season_id),this.cache=STATS.Cache},parse:function(response){return response.season.competitions[0].rounds},setSeason:function(season){this.setParam("season_id",season),this.reset(),this.fetch()},error:function(collection){collection.reset()},fetch:function(){var options={error:this.error};return Backbone.Collection.prototype.fetch.call(this,options)}}),STATS.RoundsView=Backbone.View.extend({initialize:function(){this.collection.on("reset",this.render,this)},render:function(){return this.$el.empty(),this.addEmpty(),this.collection.length?(_.each(this.collection.models,this.addOne,this),void $.uniform.update()):void $.uniform.update()},addOne:function(model){var content=_.template('<option value="<%= round_id %>"><%= round_name %></option>',{round_id:model.get("roundId"),round_name:model.get("name")});this.$el.append(content)},addEmpty:function(){var element='<option value="">All Rounds</option>';return this.$el.append(element)}}),STATS.Match=Backbone.Model.extend({parse:function(response){return response.match}}),STATS.Matches=Backbone.Collection.extend({mixin:[Backbone.URLRoutesMixin,Backbone.CachedCollectionMixin],model:STATS.Match,urlRoutes:["afl/matchItems/round/:round_id"],urlParams:{round_id:null},initialize:function(models,options){options.service&&(this.service=options.service),options.round_id&&this.setParam("round_id",options.round_id),this.cache=STATS.Cache},setRound:function(round){this.setParam("round_id",round),this.reset(),this.fetch()},error:function(collection){collection.reset()},fetch:function(){var options={error:this.error};return Backbone.Collection.prototype.fetch.call(this,options)},parse:function(response){return response.items}}),STATS.MatchesView=Backbone.View.extend({initialize:function(){this.collection.on("reset",this.render,this)},render:function(){return this.$el.empty(),this.addEmpty(),this.collection.length?(_.each(this.collection.models,this.addOne,this),void $.uniform.update()):void $.uniform.update()},addOne:function(model){var content=_.template('<option value="<%= match_id %>"><%= match_name %></option>',{match_id:model.get("matchId"),match_name:model.get("abbr")});this.$el.append(content)},addEmpty:function(){var element='<option value="">All Matches</option>';return this.$el.append(element)}}),STATS.Teams=Backbone.Collection.extend({mixin:[Backbone.URLRoutesMixin,Backbone.CachedCollectionMixin],urlRoutes:["afl/matchItem/:match_id"],urlParams:{match_id:null},initialize:function(models,options){options.service&&(this.service=options.service),options.match_id&&this.setParam("match_id",options.match_id),this.cache=STATS.Cache},setMatch:function(match){this.setParam("match_id",match),this.reset(),this.fetch()},error:function(collection){collection.reset()},fetch:function(){var options={error:this.error};return Backbone.Collection.prototype.fetch.call(this,options)},parse:function(response){var teams=[response.match.homeTeam,response.match.awayTeam];return teams}}),STATS.TeamsView=Backbone.View.extend({initialize:function(){this.collection.on("reset",this.render,this)},render:function(){return this.$el.empty(),this.addEmpty(),this.collection.length?(_.each(this.collection.models,this.addOne,this),void $.uniform.update()):void $.uniform.update()},addOne:function(model){var content=_.template('<option value="<%= team_id %>"><%= team_name %></option>',{team_id:model.get("teamId"),team_name:model.get("name")});this.$el.append(content)},addEmpty:function(){var element='<option value="">All Teams</option>';return this.$el.append(element)}})}).call(this.AFL);